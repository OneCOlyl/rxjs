export const operators = [
  {
    name: 'Без оператора',
    value: 'none',
    description: 'Поток без применения RxJS-операторов. Просто возвращает все товары как есть.',
  },
  {
    name: 'map (название в верхний регистр)',
    value: 'map',
    description: 'Оператор map преобразует каждый элемент потока, применяя к нему функцию. В данном случае — переводит название товара в верхний регистр. Используется для трансформации данных без изменения их количества.',
  },
  {
    name: 'filter (цена > 100)',
    value: 'filter',
    description: 'Оператор filter пропускает только те элементы потока, которые удовлетворяют условию. Здесь — только товары с ценой больше 100. Используется для фильтрации данных по условию.',
  },
  {
    name: 'take (первые 3)',
    value: 'take',
    description: 'Оператор take берёт только первые N элементов из потока, остальные игнорирует. В данном случае — только первые 3 товара. Полезно, если нужно ограничить количество результатов.',
  },
  {
    name: 'switchMap (товары + корзины)',
    value: 'switchMap',
    description: 'Оператор switchMap для каждого значения из исходного потока создаёт новый Observable (например, делает новый запрос), и отписывается от предыдущего. Здесь: после получения товаров сразу подгружаются корзины, и результатом становится объединённый массив товаров и корзин. Используется для последовательных асинхронных запросов, когда важен только последний результат.',
  },
  {
    name: 'forkJoin (товары и корзины)',
    value: 'forkJoin',
    description: 'Оператор forkJoin запускает несколько Observable параллельно и ждёт, пока все завершатся. После этого возвращает массив последних значений каждого Observable. Здесь: возвращает массив, объединяющий все товары и все корзины. Используется для параллельных запросов, когда нужны все результаты сразу.',
  },
  {
    name: 'combineLatest (товары и корзины)',
    value: 'combineLatest',
    description: 'Оператор combineLatest комбинирует последние значения из нескольких Observable. Каждый раз, когда один из потоков выдаёт новое значение, возвращается массив последних значений всех потоков. Здесь: объединяет последние товары и корзины. Используется для синхронизации данных из разных источников.',
  },
  {
    name: 'iif (если товаров > 10, показать корзины, иначе товары)',
    value: 'iif',
    description: 'Оператор iif динамически выбирает, какой Observable подписывать, в зависимости от условия. Здесь: если товаров больше 10 — показываются корзины, иначе — товары. Используется для динамического ветвления потоков.',
  },
]; 